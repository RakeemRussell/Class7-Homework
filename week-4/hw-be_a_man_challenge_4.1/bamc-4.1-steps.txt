bamc 4.1

Create a VPC (must have at least 3 availability zones)

Inside your VPC, build a single Windows bastion host within a public subnet, and one Linux web server per availability zone, all  in different private subnets

Each Linux web server should also display different text and pictures

Take screenshots of the running WIndows bastion host, the three Linux servers (highlighting the three different AZs in each photo), and a screenshot of a successful SSH connection to each Linux server from within the bastion host.


1.BUILD NETWORK ARCHITECTURE:
    1a.chose region with 3 or more AZs
    1b.fill out cidr block
cidr-range (e.g. 10.0.0.0/16)
    1c.chose number of subnets:3
    1d.fill out subnets
us-east-1a: 10.91.1.0/24
us-east-1b: 10.91.2.0/24
us-east-1c: 10.91.3.0/24
us-east-1a: 10.91.10.0/24
us-east-1b: 10.91.20.0/24
us-east-1c: 10.91.30.0/24


2.BUILD VPC: 
    2a. vpc name: <bamc4.1-vpc>
    2b. cidr block: <copy_from_network_architecture>
    2c. number of AZs: <3> 
    2d. number of public subnets: <copy_from_network_architecture>
    2e. number of private subnets: <copy_from_network_architecture>
    2f. nat-gateway: <1> 

3.BUILD SG-1: 
    3a.sg name: <bamc4.1-sg-public>
    3b.description: <bamc4.1-sg-public>
    3c.chose vpc: <bamc4.1-vpc>
    3d.inbound rules:
<rdp , anywhere-ipv4 , connect to windows server>
    3e. outbound rules: don't touch!!!

4.BUILD SG-2:
    4a.sg name: <bamc4.1-sg-private>
    4b.description: <bamc4.1-sg-private>
    4c.chose vpc: <bamc4.1-vpc>
    4d.inbound rules:
<ssh , anywhere-ipv4 , ssh>
<http , anywhere-ipv4 , webserver>
<all-icmp-ipv4 , anywhere-ipv4 , ping>  
    4e.outbound rules: don't touch!!!


5.BUILD WINDOWS SERVER:
    5a.click-launch-instance
    5b.instance-name: <bamc4.1-windows-bastion>
    5c.application-&-os-images: <windows>
    5d.ami: <microsoft-windows-server-2025-base>
    5e.instance-type: <t3.large>
    5f.key-pair-name: <bamc4.1-key-pair>
    5g.key-pair-type: <rsa>
    5h.private-key-file-format: <.pem>
    5i.network-settings:
vpc: <bamc4.1-vpc>
subnet: <any public subnet>
auto-assign-public-ip: <enable>
firewall(sg): <bamc4.1-sg-public>


6.BUILD Linux SERVERS:
    5a.click-launch-instance
    5b.instance-name: <bamc4.1-linux-webserver>
    5c.application-&-os-images: <linux>
    5d.ami: <amazon linux 2013 kernel-6.1 ami>
    5e.instance-type: <t3.micro>
    5f.key-pair-name: <existing_bamc4.1-key-pair>
    5g.key-pair-type: <existing_bamc4.1-key-type>
    5h.private-key-file-format: <existing_bamc4.1-key-format>
    5i.network-settings:
vpc: <existing_bamc4.1-vpc>
subnet: <private subnet>
auto-assign-public-ip: <disable>
firewall(sg): <bamc4.1-sg-private>
    5j.advanced details: 
user-data: <startup-script>



7.CONNECT TO WINDOWS SERVER:
    7a.click-instances-menu
    7b.highlight bastion server
    7c.click connect
    7d.click rdp client
    7e.download remote desktop file
    7f.click (get-password)
    7g.click (upload-private-key-file)
    7h.chose the .pem file
    7i.click (decrypt-password)
    7j.copy password to notepad
    7k.copy public dns to notepad
    7l.open remote desktop file in downloads
    7m.click connect
    7n.pc-name: public dns
    7o.username: administrator
    7p.password: get from notepad


8.CONNECT TO LINUX VIA BROWSER FROM WINDOWS-BASTION:
8a.copy_linux_private-ip-dns-name
    8b.open bastion-windows-server
    8c.paste_linux_private-ip-dns-name_inside_new_tab_of_bastion-server_(with http://)_before



9.CONNECT TO LINUX VIA SSH FROM WINDOWS-BASTION:
    9a.open powershell as administrator
    9b.run (ping -n 5 private-ip-dns-name)
    9c.run (whoami)


10.TEARDOWN:
    10a.<e.g. delete instances>
    10b.<e.g. delete nate-gateway>
    10c.<e.g. delete vpc>
    10d.<e.g. release elastic ip (takes time)>

